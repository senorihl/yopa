#$schema:

services:
  traefik:
    image: "traefik:v3.1"
    command:
      - "--log.level=INFO"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  demo:
    build:
      context: .
      target: demo
      args:
        ENTRY_DIRECTORY: services/pixel
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.demo.rule=Host(`demo.yopa.localhost`)"
      - "traefik.http.routers.demo.entrypoints=web"
      - "traefik.http.services.demo.loadbalancer.server.port=80"
    volumes:
      - .:/app:rw
      - ./demo/entrypoint.sh:/usr/local/bin/docker-entrypoint.sh:rw

  script:
    image: senorihl/yopa-builder_test
    build:
      context: .
      target: builder
      args:
        ENTRY_DIRECTORY: services/pixel
    environment:
      NODE_ENV: 'development'
    volumes:
      - .:/app:rw
      - ./demo/entrypoint.sh:/usr/local/bin/docker-entrypoint.sh:rw
    command: [ "yarn", "dev", "--no-watch.clearScreen" ]
    tty: true

  pixel:
    image: senorihl/yopa-pixel_test
    build:
      context: .
      target: watchable
      args:
        ENTRY_DIRECTORY: services/pixel
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pixel.rule=Host(`pixel.yopa.localhost`)"
      - "traefik.http.routers.pixel.entrypoints=web"
      - "traefik.http.services.pixel.loadbalancer.server.port=80"
    env_file: &env_files
      - path: ./.env
        required: true
      - path: ./.env.local
        required: false
    depends_on:
      - nats

  worker:
    image: senorihl/yopa-worker_test
    build:
      context: .
      target: watchable
      args:
        ENTRY_DIRECTORY: services/worker
    volumes:
      - .:/app:rw
    env_file: *env_files
    depends_on:
      - nats

  postgres:
    image: postgres:alpine
    volumes:
      - pg-data:/var/lib/postgresql/data
      - ./database/migrations/:/docker-entrypoint-migrations.d/
      - ./database/docker-entrypoint.sh:/usr/local/bin/docker-entrypoint.sh
    env_file: *env_files
    ports:
      - "5432:5432"

  nats:
    image: nats:2.10.21
    command: ["-n", "yopa", "-js", "-sd", "/data/jetstream"]
    volumes:
      - jetstream-data:/data/jetstream

volumes:
  jetstream-data:
  pg-data:
